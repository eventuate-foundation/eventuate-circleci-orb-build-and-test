description: >
  Implements build and test steps common to Eventuate projects.
parameters:
  script:
    description: the script to execute
    type: string
  resource_class:
    description: the resource class
    type: string
    default: 'medium'
  maven_cache_command:
    description: maven command to run
    type: string
    default: ''
  project_name:
    description: name of project
    type: string
    default: 'eventuate-examples-java-spring-todo-list'
  checksum_files:
    description: files to checksum
    type: string
    default: 'gradle.properties gradle/wrapper/gradle-wrapper.properties'
  restore_cache_prefix:
    description: set to random value to disable cache restoration
    type: string
    default: ''
machine:
  image: ubuntu-2004:202101-01
  docker_layer_caching: true
resource_class: <<parameters.resource_class>>
working_directory: ~/<< parameters.project_name >>
environment:
  # Customize the JVM maximum heap limit
  JVM_OPTS: -Xmx256m
  TERM: dumb
steps:
  - checkout
  - run:
      name: install java
      command: <<include(scripts/install-java-11.sh)>>
  - run:
      name: create checksum file
      command: cat << parameters.checksum_files >> > /tmp/files_to_checksum
  - restore_cache:
      keys:
        - << parameters.restore_cache_prefix >><< parameters.project_name >>-{{ checksum "/tmp/files_to_checksum" }}
        - << parameters.restore_cache_prefix >><< parameters.project_name >>-
  - run:
      name: populate cache
      environment:
        MAVEN_CACHE_COMMAND: <<parameters.maven_cache_command>>
      command: <<include(scripts/populate-cache.sh)>>
  - save_cache:
      paths:
        - ~/.gradle
        - ~/.m2
      key: << parameters.project_name >>--{{ checksum "/tmp/files_to_checksum" }}
  - run:
      name: build
      environment:
        SCRIPT_TO_RUN: <<parameters.script>>
      command: <<include(scripts/run-script.sh)>>
  - run:
      name: Save test results
      command: <<include(scripts/save-test-results.sh)>>
      when: always
  - run:
      name: Print container logs
      command: <<include(scripts/print-container-logs.sh)>>
      when: always
  - store_test_results:
      path: ~/junit
  - store_artifacts:
      path: ~/junit
  - store_artifacts:
      path: ~/container-logs
